{% extends "standard-form.njk" %}

{% from "input/macro.njk" import govukInput %}
{% from "select/macro.njk" import govukSelect %}
{% from "inset-text/macro.njk" import govukInsetText %}

{% set title = 'Enter ' + data.pronoun + ' address' %}

{% set countries = [] %}

{% for country in data.countries %}
    {{ countries.push({
        text: country.name,
        id: country.code,
        value: country.code,
        selected: payload['country-code'] === country.code
    }) }}
{% endfor %}

{%
    set errorMap = {
        'premises': {
            'string.empty': { ref: '#premises', text: 'Enter the building number or name' },
            'string.max': { ref: '#premises', text: 'The building number or name must be less than 50 characters' }
        },
        'postcode': {
            'string.empty': { ref: '#postcode', text: 'Enter the postcode' },
            'string.pattern.base': { ref: '#postcode', text: 'The postcode doesn\'t look right. Check and enter again' }
        },
        'town': {
            'string.empty': { ref: '#town', text: 'Enter the town or city' },
            'string.max': { ref: '#town', text: 'The town or city must be less than 50 characters long' }
        },
        'country': {
            'string.empty': { ref: '#country', text: 'Choose the country' }
        }
    }
%}

{% block pageContent %}

    {% if data.searchTerms %}
        {{ govukInsetText({
          html: '<p>We could not find an address for premises <span class="govuk-!-font-weight-bold">' +
          data.searchTerms.premises + '</span> and postcode <span class="govuk-!-font-weight-bold">' + data.searchTerms.postcode + '</span></p>' +
            '<p>Enter the full address below</p>'
         }) }}
    {% endif %}

    {{ govukInput({
      label: {
        text: "Building number or name"
      },
      id: "premises",
      name: "premises",
      hint: { text: "For example, 47, Flat 2a or Rose Cottage" },
      value: payload['premises'],
      classes: "govuk-input--width-20",
      attributes: { maxlength: 50 },
      errorMessage: { text: 'Enter the building number or name' } if error['premises']
    }) }}

    {{ govukInput({
      label: {
        text: "Address line 1 (optional)"
      },
      id: "street",
      name: "street",
      value: payload['street'],
      classes: "govuk-input--width-20",
      attributes: { maxlength: 50 }
    }) }}

    {{ govukInput({
      label: {
        text: "Address line 2 (optional)"
      },
      id: "locality",
      name: "locality",
      value: payload['locality'],
      classes: "govuk-input--width-20",
      autocomplete: 'address-level2',
      attributes: { maxlength: 50 }
    }) }}

    {{ govukInput({
      label: {
        text: "Town or city"
      },
      id: "town",
      name: "town",
      value: payload['town'],
      classes: "govuk-input--width-20",
      attributes: { maxlength: 50 },
      autocomplete: 'address-level1',
      errorMessage: { text: 'Enter the town or city' } if error['town']
    }) }}

    {{ govukInput({
      label: {
        text: "Postcode"
      },
      id: "postcode",
      name: "postcode",
      value: payload['postcode'],
      classes: "govuk-input--width-20",
      attributes: { maxlength: 10 },
      autocomplete: 'postal-code',
      errorMessage: { text: 'Enter the postcode' } if error['postcode']
    }) }}

    {{ govukSelect({
      id: "country-code",
      name: "country-code",
      label: {
        text: "Country"
      },
      items: countries,
      errorMessage: { text: 'Select the country' } if error['country-code']
    }) }}

    <p class="govuk-body-m"><a class="govuk-link" href="{{ data.lookupPage }}">Find the address</a></p>
{% endblock %}